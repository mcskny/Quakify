{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bain\\\\Desktop\\\\Quakify-main\\\\quakifyapp\\\\src\\\\components\\\\MyComponent.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sendDataToPHP = () => {\n  const generateRandomData = () => {\n    // Rasgele lat ve long değerleri oluşturma (-90 ile 90 arasında)\n    const lat = (Math.random() * 180 - 90).toFixed(6);\n    const long = (Math.random() * 180 - 90).toFixed(6);\n\n    // Rasgele deprem büyüklüğü oluşturma (0 ile 10 arasında)\n    const mag = (Math.random() * 10).toFixed(1);\n\n    // Rasgele tarih oluşturma (1 Ocak 1970'den bu yana geçen milisaniye cinsinden)\n    const randomDate = new Date(Math.random() * Date.now());\n    const date = `${randomDate.getDate().toString().padStart(2, '0')}/${(randomDate.getMonth() + 1).toString().padStart(2, '0')}/${randomDate.getFullYear()}`;\n\n    // Rasgele derinlik oluşturma (0 ile 1000 arasında)\n    const depth = (Math.random() * 1000).toFixed(1);\n\n    // Rasgele zaman oluşturma (milisaniye cinsinden günün belirli bir saati)\n    const hours = Math.floor(Math.random() * 24).toString().padStart(2, '0');\n    const minutes = Math.floor(Math.random() * 60).toString().padStart(2, '0');\n    const time = `${hours}.${minutes}`;\n    return {\n      lat,\n      long,\n      mag,\n      date,\n      depth,\n      time\n    };\n  };\n  const randomData = generateRandomData();\n\n  // Verileri PHP'ye gönderme kodu\n  fetch('https://quakify.mcskn.com/backend/addData.php', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(randomData)\n  }).then(response => {\n    if (response.ok) {\n      alert('Veri başarıyla gönderildi.');\n    } else {\n      alert('Veri gönderilirken bir sdfasdfhata oluştu.');\n    }\n  }).catch(error => {\n    alert('İstek sırasında bir hata oluştu:', error);\n  });\n};\nconst MyComponent = () => {\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: \"#\",\n    onClick: sendDataToPHP,\n    className: \"w-[380px] h-[230px] bg-[#FF3131] rounded-3xl mr-[288px] float-right mt-24 pt-16 text-white inter text-[40px] text-center\",\n    children: \"Add Random Quake\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","sendDataToPHP","generateRandomData","lat","Math","random","toFixed","long","mag","randomDate","Date","now","date","getDate","toString","padStart","getMonth","getFullYear","depth","hours","floor","minutes","time","randomData","fetch","method","headers","body","JSON","stringify","then","response","ok","alert","catch","error","MyComponent","href","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bain/Desktop/Quakify-main/quakifyapp/src/components/MyComponent.jsx"],"sourcesContent":["import React from 'react';\n\nconst sendDataToPHP = () => {\n  const generateRandomData = () => {\n    // Rasgele lat ve long değerleri oluşturma (-90 ile 90 arasında)\n    const lat = (Math.random() * 180 - 90).toFixed(6);\n    const long = (Math.random() * 180 - 90).toFixed(6);\n  \n    // Rasgele deprem büyüklüğü oluşturma (0 ile 10 arasında)\n    const mag= (Math.random() * 10).toFixed(1);\n\n  \n    // Rasgele tarih oluşturma (1 Ocak 1970'den bu yana geçen milisaniye cinsinden)\n    const randomDate = new Date(Math.random() * Date.now());\n    const date = `${randomDate.getDate().toString().padStart(2, '0')}/${(randomDate.getMonth() + 1).toString().padStart(2, '0')}/${randomDate.getFullYear()}`;\n  \n    // Rasgele derinlik oluşturma (0 ile 1000 arasında)\n    const depth = (Math.random() * 1000).toFixed(1);\n  \n    // Rasgele zaman oluşturma (milisaniye cinsinden günün belirli bir saati)\n    const hours = Math.floor(Math.random() * 24).toString().padStart(2, '0');\n    const minutes = Math.floor(Math.random() * 60).toString().padStart(2, '0');\n    const time = `${hours}.${minutes}`;\n  \n    return {\n      lat,\n      long,\n      mag,\n      date,\n      depth,\n      time\n    };\n  };\n\n  const randomData = generateRandomData();\n\n  // Verileri PHP'ye gönderme kodu\n  fetch('https://quakify.mcskn.com/backend/addData.php', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(randomData)\n  })\n  .then(response => {\n    if (response.ok) {\n      alert('Veri başarıyla gönderildi.', );\n    } else {\n      alert('Veri gönderilirken bir sdfasdfhata oluştu.');\n    }\n  })\n  .catch(error => {\n    alert('İstek sırasında bir hata oluştu:', error);\n  });\n};\n\nconst MyComponent = () => {\n  return (\n    <a href='#' onClick={sendDataToPHP} className='w-[380px] h-[230px] bg-[#FF3131] rounded-3xl mr-[288px] float-right mt-24 pt-16 text-white inter text-[40px] text-center'>Add Random Quake</a>\n  );\n};\n\nexport default MyComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}