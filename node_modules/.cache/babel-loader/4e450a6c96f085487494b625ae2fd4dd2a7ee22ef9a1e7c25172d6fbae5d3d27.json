{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import'../App.css';import Component from'../components/Component';import Panel from'../components/rightpanel';import MobilePanel from'../components/MobilePanel';import Map from'../components/Map';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Home=_ref=>{let{sortType,setSortType}=_ref;const[quak,setQuak]=useState([]);const[selectedMag,setSelectedMag]=useState(2.0);const[showMap,setShowMap]=useState(false);const[showList,setShowList]=useState(false);const[dateFilter,setDateFilter]=useState(\"week\");const[selectedMobileQuake,setSelectedMobileQuake]=useState(null);useEffect(()=>{const fetchData=async()=>{try{const response=await axios.get('https://quakify.mcskn.com/backend/api.php');setQuak(response.data);}catch(error){console.error('Error fetching data:',error);}};fetchData();},[]);function dateStringToComparable(str){const[day,month,year]=str.split('/');return\"\".concat(year).concat(month.padStart(2,'0')).concat(day.padStart(2,'0'));}function getDateNDaysAgo(n){const d=new Date();d.setDate(d.getDate()-n);return d;}function isDateInRange(quakeDateStr,fromDate,toDate){const[day,month,year]=quakeDateStr.split('/');const quakeDate=new Date(\"\".concat(year,\"-\").concat(month,\"-\").concat(day));return quakeDate>=fromDate&&quakeDate<=toDate;}let filteredQuak=quak.filter(q=>parseFloat(q.magnitude)>=selectedMag);const now=new Date();if(dateFilter===\"week\"){const weekAgo=getDateNDaysAgo(7);filteredQuak=filteredQuak.filter(q=>isDateInRange(q.date,weekAgo,now));}else if(dateFilter===\"month\"){const monthAgo=getDateNDaysAgo(30);filteredQuak=filteredQuak.filter(q=>isDateInRange(q.date,monthAgo,now));}else if(dateFilter===\"year\"){const yearAgo=getDateNDaysAgo(365);filteredQuak=filteredQuak.filter(q=>isDateInRange(q.date,yearAgo,now));}const sortedQuak=[...filteredQuak].sort((a,b)=>{if(sortType===\"largest\")return b.magnitude-a.magnitude;if(sortType===\"oldest\")return dateStringToComparable(a.date)-dateStringToComparable(b.date);if(sortType===\"newest\")return dateStringToComparable(b.date)-dateStringToComparable(a.date);return 0;});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MobilePanel,{setShowMap:setShowMap,showMap:showMap,setShowList:setShowList,sortType:sortType,setSortType:setSortType,dateFilter:dateFilter,setDateFilter:setDateFilter,selectedMobileQuake:selectedMobileQuake}),/*#__PURE__*/_jsx(Component,{className:\"z-20 mt-[-20px] block sm:hidden overflow-hidden rounded-t-3xl h-[680px] \".concat(showMap?'hidden':''),quak:sortedQuak}),/*#__PURE__*/_jsxs(\"div\",{id:\"main\",className:\"float-right w-[20%] sm:w-[50%] md:w-[40%] lg:w-[35%] xl:w-[20%] inline-block\",children:[/*#__PURE__*/_jsx(Panel,{quak:sortedQuak,setSortType:setSortType,selectedMag:selectedMag,setSelectedMag:setSelectedMag,dateFilter:dateFilter,setDateFilter:setDateFilter}),/*#__PURE__*/_jsx(Component,{className:\"hidden sm:block w-full overflow-hidden h-[640px]\",quak:sortedQuak})]}),/*#__PURE__*/_jsx(Map,{showMap:showMap,onQuakeSelectMobile:setSelectedMobileQuake})]});};export default Home;","map":{"version":3,"names":["React","useEffect","useState","Component","Panel","MobilePanel","Map","axios","jsx","_jsx","jsxs","_jsxs","Home","_ref","sortType","setSortType","quak","setQuak","selectedMag","setSelectedMag","showMap","setShowMap","showList","setShowList","dateFilter","setDateFilter","selectedMobileQuake","setSelectedMobileQuake","fetchData","response","get","data","error","console","dateStringToComparable","str","day","month","year","split","concat","padStart","getDateNDaysAgo","n","d","Date","setDate","getDate","isDateInRange","quakeDateStr","fromDate","toDate","quakeDate","filteredQuak","filter","q","parseFloat","magnitude","now","weekAgo","date","monthAgo","yearAgo","sortedQuak","sort","a","b","children","className","id","onQuakeSelectMobile"],"sources":["C:/Users/bain/Desktop/Quakify-main/quakifyapp/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport '../App.css';\nimport Component from '../components/Component';\nimport Panel from '../components/rightpanel';\nimport MobilePanel from '../components/MobilePanel';\nimport Map from '../components/Map';\nimport axios from 'axios';\n\nconst Home = ({sortType, setSortType}) => {\n    const [quak, setQuak] = useState([]);\n    const [selectedMag, setSelectedMag] = useState(2.0);\n    const [showMap, setShowMap] = useState(false); \n    const [showList, setShowList] = useState(false); \n    const [dateFilter, setDateFilter] = useState(\"week\");\n    const [selectedMobileQuake, setSelectedMobileQuake] = useState(null);\n\n    \n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await axios.get('https://quakify.mcskn.com/backend/api.php');\n                setQuak(response.data);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n        fetchData();\n    }, []);\n\n    function dateStringToComparable(str) {\n        const [day, month, year] = str.split('/');\n        return `${year}${month.padStart(2, '0')}${day.padStart(2, '0')}`;\n    }\n\n    function getDateNDaysAgo(n) {\n        const d = new Date();\n        d.setDate(d.getDate() - n);\n        return d;\n    }\n    function isDateInRange(quakeDateStr, fromDate, toDate) {\n        const [day, month, year] = quakeDateStr.split('/');\n        const quakeDate = new Date(`${year}-${month}-${day}`);\n        return quakeDate >= fromDate && quakeDate <= toDate;\n    }\n\n    let filteredQuak = quak.filter(q => parseFloat(q.magnitude) >= selectedMag);\n\n    const now = new Date();\n    if (dateFilter === \"week\") {\n        const weekAgo = getDateNDaysAgo(7);\n        filteredQuak = filteredQuak.filter(q => isDateInRange(q.date, weekAgo, now));\n    } else if (dateFilter === \"month\") {\n        const monthAgo = getDateNDaysAgo(30);\n        filteredQuak = filteredQuak.filter(q => isDateInRange(q.date, monthAgo, now));\n    } else if (dateFilter === \"year\") {\n        const yearAgo = getDateNDaysAgo(365);\n        filteredQuak = filteredQuak.filter(q => isDateInRange(q.date, yearAgo, now));\n    }\n\n    const sortedQuak =  [...filteredQuak].sort((a, b) => {\n        if (sortType === \"largest\") return b.magnitude - a.magnitude;\n        if (sortType === \"oldest\") return dateStringToComparable(a.date) - dateStringToComparable(b.date);\n        if (sortType === \"newest\") return dateStringToComparable(b.date) - dateStringToComparable(a.date);\n        return 0;\n    });\n\n    return (\n        <div>\n            <MobilePanel \n                setShowMap={setShowMap} \n                showMap={showMap} \n                setShowList={setShowList}\n                sortType={sortType}\n                setSortType={setSortType}\n                dateFilter={dateFilter}\n                setDateFilter={setDateFilter}\n                selectedMobileQuake={selectedMobileQuake}\n            />\n\n            <Component\n                className={`z-20 mt-[-20px] block sm:hidden overflow-hidden rounded-t-3xl h-[680px] ${showMap ? 'hidden' : ''}`}\n                quak={sortedQuak}\n            />\n\n            <div id=\"main\" className='float-right w-[20%] sm:w-[50%] md:w-[40%] lg:w-[35%] xl:w-[20%] inline-block'>\n              <Panel\n                quak={sortedQuak}\n                setSortType={setSortType}\n                selectedMag={selectedMag}\n                setSelectedMag={setSelectedMag}\n                dateFilter={dateFilter}\n                setDateFilter={setDateFilter}\n              />\n              <Component className='hidden sm:block w-full overflow-hidden h-[640px]' quak={sortedQuak} />\n            </div>\n            <Map showMap={showMap} onQuakeSelectMobile={setSelectedMobileQuake} />\n        </div>\n    );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}